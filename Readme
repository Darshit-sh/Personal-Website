1. Design Choices:

The design of Darshit’s Portfolio website is focused on simplicity and functionality, ensuring that users can easily navigate through different sections of the portfolio. Here’s an overview of the key design elements:

	•	Minimalist Layout: The layout follows a minimalist approach with a centered content block, providing clarity and easy navigation. A white background combined with soft shadows creates a modern and clean aesthetic.
	•	Typography: A simple, sans-serif font is chosen for easy readability. The headings are bold and large enough to draw attention without overwhelming the viewer, while body text is sized for comfortable reading.
	•	Color Scheme: A blue color (#007bff) has been used for buttons, reflecting a professional yet approachable tone. Hover effects on buttons (with a darker shade of blue) ensure that users know which buttons are interactive, providing a better user experience. The white background and dark text colors maintain good contrast and readability.
	•	Tabs: There are three main buttons, “About,” “Achievements,” and “Projects,” which are placed centrally for easy access. Clicking on each button opens the respective tab, hiding the others. This ensures that the user is focused on one section at a time, which improves content digestion.
	•	Back Button: Each tab has a “Back” button at the bottom to allow users to return to the main screen. This simplifies navigation and ensures a consistent user experience across all sections.
	•	Responsiveness: The design is responsive and works well on multiple screen sizes. Elements like padding, font sizes, and button sizes adjust depending on the screen size to provide an optimal experience on both desktop and mobile devices.

2. Usage:

The website consists of three main sections:

	•	About: Provides a short introduction to the user, currently tailored for Darshit Sharma, describing their academic pursuits, internships, and ambassador role.
	•	Achievements: Lists major academic and professional achievements such as rankings in science competitions and work for IIT Tirupati.
	•	Projects: Highlights projects, like a logo design for IIT Tirupati, with a clickable link to the Behance project page.

These sections are hidden by default, only appearing when their corresponding buttons are clicked. Once the user navigates to a specific section, a back button is available for easy return to the main menu.

3. Necessary Instructions to Run or Modify the Website Locally:

To run this website locally on your machine, follow these steps:

	1.	Download the Files:
Ensure that you have downloaded both the portfolio_final.html and styles_final.css files.
	2.	Organize Files:
	•	Create a new folder on your computer for the website, such as SerenaPortfolio.
	•	Place the portfolio_final.html and styles_final.css files inside this folder.
	•	Ensure the two files are at the same directory level (i.e., styles_final.css is not inside any sub-folder).
	3.	Open the Website:
	•	Double-click on portfolio_final.html, or right-click and open it in a web browser (such as Chrome, Firefox, or Safari).
	•	The website will open in your browser, and you will be able to interact with the different sections.
	4.	Modify the Website:
If you wish to modify the website, you can make changes to the HTML or CSS files using any text editor, such as Visual Studio Code, Sublime Text, or Notepad.
	•	HTML Modifications: You can edit portfolio_final.html to add new sections, update the content, or rearrange the layout. For example, you can change the text in the “About” section or add more achievements and projects.
	•	CSS Modifications: To alter the appearance (colors, fonts, spacing, etc.), you can open styles_final.css. For instance, to change the button color, update the .btn class’s background-color property. Make sure to save the changes and refresh the webpage to see them applied.
	5.	Testing Responsiveness:
You can test how the website looks on different devices by resizing your browser window. Alternatively, you can use your browser’s Developer Tools to simulate mobile devices.
	6.	Deploying the Website:
If you want to make this website publicly accessible, you can deploy it on platforms like GitHub Pages, Netlify, or Vercel:
	•	For GitHub Pages, create a repository, upload both files, and activate GitHub Pages in the repository settings. The site will be live on a URL generated by GitHub.
	•	For Netlify or Vercel, you can simply drag and drop the folder into their web interface, and they will host it for you.

With these steps, you should be able to successfully run and modify the website to suit your needs! Let me know if you need further clarification or assistance.
